# utils/helpers.py

import logging
import os
import re

from selenium import webdriver
from selenium.webdriver.firefox.options import Options

logger = logging.getLogger("parser")


def clean_html(html):
    """
    –£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ </div> –≤–Ω—É—Ç—Ä–∏ <td>, —É—á–∏—Ç—ã–≤–∞—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫.
    """
    cleaned_html = re.sub(r"</div>\s*</td>", "</td>", html, flags=re.IGNORECASE)
    return cleaned_html


def create_firefox_driver():
    logger.info("üöó –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ Firefox –¥—Ä–∞–π–≤–µ—Ä–∞")
    try:
        os.environ["DISPLAY"] = ":99"  # –∫–ª—é—á –¥–ª—è Xvfb
        options = Options()
        options.add_argument("-headless")
        options.add_argument("--no-sandbox")
        options.add_argument("--disable-dev-shm-usage")

        driver = webdriver.Firefox(options=options)
        logger.info("‚úÖ Firefox –¥—Ä–∞–π–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        return driver
    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Firefox –¥—Ä–∞–π–≤–µ—Ä–∞: {e}")
        raise
